# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/update/sys_installer/sys_installer_default_cfg.gni")
import("//build/ohos.gni")

sys_installer_path = rebase_path("${sys_installer_absolutely_path}", ".")
sys_installer_gen("sys_installer") {
  defines = [ "SYS_INSTALLER_SERVICE" ]

  sources = [
    "${sys_installer_path}/frameworks/ipc_server/src/sys_installer_callback_proxy.cpp",
    "${sys_installer_path}/frameworks/ipc_server/src/sys_installer_server.cpp",
    "${sys_installer_path}/frameworks/ipc_server/src/sys_installer_stub.cpp",
  ]

  include_dirs = [
    "${sys_installer_path}/common/include",
    "${sys_installer_path}/frameworks/ipc_server/include",
    "${sys_installer_path}/frameworks/installer_manager/include",
    "${sys_installer_path}/frameworks/status_manager/include",
    "${sys_installer_path}/interfaces/innerkits",
    "${sys_installer_path}/interfaces/inner_api/include",
  ]

  deps = [
    "${sys_installer_path}/frameworks/installer_manager:libinstallermanager",
    "${sys_installer_path}/frameworks/status_manager:libstatusmanager",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "bounds_checking_function:libsec_static",
    "cJSON:cjson",
    "c_utils:utils",
    "init:libbegetutil",
    "ipc:ipc_core",
    "ipc:ipc_single",
    "lz4:liblz4_static",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "updater:libfsmanager",
    "updater:libmiscinfo",
    "updater:libupdaterlog",
    "updater:libupdaterpackage",
    "updater:libutils",
  ]

  if (defined(sys_installer_custom_external_deps)) {
    external_deps += sys_installer_custom_external_deps
  }

  part_name = "sys_installer"
  subsystem_name = "updater"
}
